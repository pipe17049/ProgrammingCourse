#!/bin/bash

# üñ•Ô∏è Monitor de Informaci√≥n del Sistema
# Descripci√≥n: Script para mostrar informaci√≥n detallada del sistema
# Uso: ./03_system_info.sh [opci√≥n]

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Funci√≥n para encabezados
print_header() {
    echo -e "\n${CYAN}=====================================${NC}"
    echo -e "${YELLOW}üîç $1${NC}"
    echo -e "${CYAN}=====================================${NC}"
}

# Informaci√≥n b√°sica del sistema
show_basic_info() {
    print_header "INFORMACI√ìN B√ÅSICA DEL SISTEMA"
    
    echo -e "${GREEN}üñ•Ô∏è  Sistema Operativo:${NC} $(uname -s)"
    echo -e "${GREEN}üì° Nombre del Host:${NC} $(hostname)"
    echo -e "${GREEN}üë§ Usuario Actual:${NC} $(whoami)"
    echo -e "${GREEN}üè† Directorio Home:${NC} $HOME"
    echo -e "${GREEN}‚ö° Shell Actual:${NC} $SHELL"
    echo -e "${GREEN}üìÖ Fecha y Hora:${NC} $(date)"
    echo -e "${GREEN}‚è∞ Uptime:${NC} $(uptime)"
}

# Informaci√≥n de hardware
show_hardware_info() {
    print_header "INFORMACI√ìN DE HARDWARE"
    
    echo -e "${BLUE}üîß Arquitectura:${NC} $(uname -m)"
    echo -e "${BLUE}üß† Procesador:${NC}"
    
    # Detectar sistema operativo para comandos espec√≠ficos
    if [[ "$OSTYPE" == "darwin"* ]]; then
        # macOS
        sysctl -n machdep.cpu.brand_string 2>/dev/null || echo "  No disponible"
        echo -e "${BLUE}üíæ Memoria Total:${NC} $(system_profiler SPHardwareDataType | grep "Memory:" | awk '{print $2 " " $3}')"
    elif [[ "$OSTYPE" == "linux"* ]]; then
        # Linux
        grep "model name" /proc/cpuinfo | head -1 | cut -d: -f2 | sed 's/^[ \t]*//' || echo "  No disponible"
        echo -e "${BLUE}üíæ Memoria Total:${NC} $(free -h | grep '^Mem:' | awk '{print $2}')"
    else
        echo "  Informaci√≥n no disponible para este sistema"
    fi
}

# Informaci√≥n de almacenamiento
show_storage_info() {
    print_header "INFORMACI√ìN DE ALMACENAMIENTO"
    
    echo -e "${PURPLE}üíø Uso del Disco:${NC}"
    df -h | head -1
    df -h | grep -E '^/dev/' | head -5
    
    echo -e "\n${PURPLE}üìÅ Uso del Directorio Actual:${NC}"
    du -sh . 2>/dev/null || echo "  No se puede calcular"
}

# Informaci√≥n de red
show_network_info() {
    print_header "INFORMACI√ìN DE RED"
    
    echo -e "${CYAN}üåê Interfaces de Red:${NC}"
    
    if command -v ip >/dev/null 2>&1; then
        # Linux con ip command
        ip addr show | grep -E '^[0-9]+:' | awk '{print "  " $2}' | sed 's/:$//'
    elif command -v ifconfig >/dev/null 2>&1; then
        # macOS y otros con ifconfig
        ifconfig | grep -E '^[a-z]' | awk '{print "  " $1}' | sed 's/:$//'
    else
        echo "  Comandos de red no disponibles"
    fi
    
    echo -e "\n${CYAN}üì° IP Externa:${NC}"
    curl -s ifconfig.me 2>/dev/null || echo "  No se puede obtener (sin conexi√≥n a internet)"
}

# Informaci√≥n de procesos
show_process_info() {
    print_header "INFORMACI√ìN DE PROCESOS"
    
    echo -e "${RED}üî• Top 5 Procesos por CPU:${NC}"
    ps aux | sort -k3 -nr | head -6 | awk 'NR==1{print "  " $0} NR>1{printf "  %-8s %-8s %-8s %s\n", $2, $3"%", $4"%", $11}'
    
    echo -e "\n${RED}üíæ Top 5 Procesos por Memoria:${NC}"
    ps aux | sort -k4 -nr | head -6 | awk 'NR==1{print "  " $0} NR>1{printf "  %-8s %-8s %-8s %s\n", $2, $3"%", $4"%", $11}'
}

# Informaci√≥n de variables de entorno importantes
show_environment_info() {
    print_header "VARIABLES DE ENTORNO IMPORTANTES"
    
    local important_vars=("PATH" "HOME" "USER" "SHELL" "LANG" "EDITOR" "TERM")
    
    for var in "${important_vars[@]}"; do
        if [[ -n "${!var}" ]]; then
            echo -e "${GREEN}$var:${NC} ${!var}"
        fi
    done
}

# Informaci√≥n completa
show_full_info() {
    echo -e "${YELLOW}üîç Generando reporte completo del sistema...${NC}\n"
    
    show_basic_info
    show_hardware_info
    show_storage_info
    show_network_info
    show_process_info
    show_environment_info
    
    echo -e "\n${GREEN}‚úÖ Reporte completo generado exitosamente${NC}"
}

# Funci√≥n para mostrar ayuda
show_help() {
    echo "üìñ Monitor de Informaci√≥n del Sistema"
    echo ""
    echo "Uso: $0 [OPCI√ìN]"
    echo ""
    echo "Opciones:"
    echo "  -a, --all        Mostrar toda la informaci√≥n"
    echo "  -b, --basic      Informaci√≥n b√°sica del sistema"
    echo "  -h, --hardware   Informaci√≥n de hardware"
    echo "  -s, --storage    Informaci√≥n de almacenamiento"
    echo "  -n, --network    Informaci√≥n de red"
    echo "  -p, --processes  Informaci√≥n de procesos"
    echo "  -e, --env        Variables de entorno"
    echo "  --help           Mostrar esta ayuda"
    echo ""
    echo "Ejemplos:"
    echo "  $0               # Informaci√≥n completa"
    echo "  $0 --basic       # Solo informaci√≥n b√°sica"
    echo "  $0 --hardware    # Solo informaci√≥n de hardware"
}

# Procesamiento de argumentos
case "${1:-}" in
    -a|--all|"")
        show_full_info
        ;;
    -b|--basic)
        show_basic_info
        ;;
    -h|--hardware)
        show_hardware_info
        ;;
    -s|--storage)
        show_storage_info
        ;;
    -n|--network)
        show_network_info
        ;;
    -p|--processes)
        show_process_info
        ;;
    -e|--env)
        show_environment_info
        ;;
    --help)
        show_help
        ;;
    *)
        echo -e "${RED}‚ùå Opci√≥n no reconocida: $1${NC}"
        echo -e "${YELLOW}üí° Usa '$0 --help' para ver las opciones disponibles${NC}"
        exit 1
        ;;
esac
